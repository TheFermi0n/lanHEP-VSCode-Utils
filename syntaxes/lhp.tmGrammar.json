{
  "scopeName": "source.lhp",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#particles"
    },
    {
      "include": "#properties"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#specials"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.lhp",
          "match": "\\b(do_if|do_else_if|do_else|end_if|quit|where|SetAngle|SetEM|CheckHerm|anti)\\b"
        },
        {
          "name": "keyword.operator.lhp",
          "match": "\\b(parameter|external_func|keys|model|let|option|alias|OrthMatrix|use|lterm)\\b"
        },
        {
          "name": "keyword.type.lhp",
          "match": "\\b(vector|spinor|scalar)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.single.lhp",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "name": "constant.character.escape.lhp",
          "match": "\\\\."
        }
      ]
    },
    "comments": {
      "name": "comment.line.percentage.lhp",
      "match": "%.*$"
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.lhp",
          "match": "(\\:=|=)"
        },
        {
          "name": "keyword.operator.arithmetic.lhp",
          "match": "[\\+\\-\\*/\\^]"
        },
        {
          "name": "keyword.operator.logical.lhp",
          "match": "(\\b(and|or|not)\\b|\\|)"
        },
        {
          "name": "keyword.operator.comparison.lhp",
          "match": "(==|!=|>=|<=|<|>)"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.lhp",
          "match": "\\b(Feynman|unitary|SMINPUTS|SU2D|SU2W|Generation|GaugeFixing)\\b"
        },
        {
          "name": "constant.numeric.lhp",
          "match": "\\b(MZ|MW|MH|Mb|Mc|Ms|Md|Mm|Mt|Vud|Vus|Vub|Vcb|Vcs|Vcd|Vtb|Vts|Vtd)\\b"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.decimal.lhp",
          "match": "\\b\\d+(\\.\\d+)?(e[+-]?\\d+)?\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "support.function.builtin.lhp",
          "match": "\\b(sqrt|sin|cos|tan|acos|AddHermConj|vev|taupm)\\b"
        }
      ]
    },
    "particles": {
      "patterns": [
        {
          "name": "entity.name.particle.lhp",
          "match": "(?<=\\b[a-zA-Z0-9_]+:\\s*\\()(?:'([^']+)'|([a-zA-Z0-9_+-]+))(?=,)|electron|'W boson'"
        }
      ]
    },
    "properties": {
      "patterns": [
        {
          "name": "keyword.property.lhp",
          "match": "\\b(mass|width|pdg|color|gauge)\\b"
        }
      ]
    },
    "specials": {
      "patterns": [
        {
          "name": "support.constant.special.lhp",
          "match": "\\b(deriv|gamma|gamma5|moment|epsv|lambda|f_SU3|taupm|tau1|tau2|tau3|delta)\\b"
        }
      ]
    }
  }
}
